version: 2
jobs:
    build_docs:
      docker:
        - image: cimg/python:3.10
      resource_class: medium
      steps:
        - checkout
        - run:
            name: Set BASH_ENV
            command: |
              echo "set -e" >> $BASH_ENV
              echo "export DISPLAY=:99" >> $BASH_ENV
              echo "export OPENBLAS_NUM_THREADS=4" >> $BASH_ENV
              echo "BASH_ENV:"
              cat $BASH_ENV

        - run:
            name: Merge with upstream
            command: |
              echo $(git log -1 --pretty=%B) | tee gitlog.txt
              echo ${CI_PULL_REQUEST//*pull\//} | tee merge.txt
              if [[ $(cat merge.txt) != "" ]]; then
                echo "Merging $(cat merge.txt)";
                git remote add upstream https://github.com/torchdr/torchdr.git;
                git pull --ff-only upstream "refs/pull/$(cat merge.txt)/merge";
                git fetch upstream main;
              fi

        # Load our data
        - restore_cache:
            keys:
              - data-cache-0
              - pip-cache

        - run:
            name: Install ffmpeg
            command: |
              sudo apt update
              sudo apt install ffmpeg

        - run:
            name: Get Python running
            command: |
              python -m pip install --user --upgrade --progress-bar off pip
              python -m pip install --user -e .
              python -m pip install --user .[doc]
        - save_cache:
            key: pip-cache
            paths:
              - ~/.cache/pip


        # Look at what we have and fail early if there is some library conflict
        - run:
            name: Check installation
            command: |
               which python
               python -c "import torchdr"
               which sphinx-build

        # Build docs
        - run:
            name: make html
            no_output_timeout: 120m
            command: |
              cd docs;
              make clean;
              make SPHINXOPTS=-v html;
              cd ..;

        # TODO MM Add stable doc
        # - run:
        #     name: add stable doc
        #     command: |
        #       set -e
        #       mkdir -p ~/.ssh
        #       echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
        #       chmod og= ~/.ssh/config
        #       cd docs;
        #       make add-stable-doc;

        # upload to gh-pages
        - run:
            name: deploy
            command: |
              if [[ ${CIRCLE_BRANCH} == "main" ]]; then
                set -e
                mkdir -p ~/.ssh
                echo -e "Host *\nStrictHostKeyChecking no" > ~/.ssh/config
                chmod og= ~/.ssh/config
                cd docs;
                pip install ghp-import;
                make install
              fi

        # Save the outputs
        - store_artifacts:
            path: docs/_build/html/
            destination: dev
        - persist_to_workspace:
            root: docs/_build
            paths:
              - html

workflows:
  version: 2

  default:
    jobs:
      - build_docs
